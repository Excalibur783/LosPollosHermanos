<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>